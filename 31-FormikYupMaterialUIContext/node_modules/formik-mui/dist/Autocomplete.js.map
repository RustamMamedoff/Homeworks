{"version":3,"file":"Autocomplete.js","sources":["../src/Autocomplete.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiAutocomplete, {\n  AutocompleteProps as MuiAutocompleteProps,\n} from '@mui/material/Autocomplete';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport type { AutocompleteRenderInputParams } from '@mui/material/Autocomplete';\n\nexport interface AutocompleteProps<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined,\n> extends FieldProps,\n    Omit<\n      MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>,\n      'name' | 'value' | 'defaultValue'\n    > {\n  type?: string;\n}\n\nexport function fieldToAutocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined,\n>({\n  disabled,\n  field,\n  form: { isSubmitting, setFieldValue },\n  type,\n  onChange,\n  onBlur,\n  freeSolo,\n  ...props\n}: AutocompleteProps<\n  T,\n  Multiple,\n  DisableClearable,\n  FreeSolo\n>): MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.multiple) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  const {\n    onChange: _onChange,\n    onBlur: _onBlur,\n    multiple: _multiple,\n    ...fieldSubselection\n  } = field;\n\n  return {\n    freeSolo,\n    onBlur:\n      onBlur ??\n      function (event) {\n        field.onBlur(event ?? field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, value) {\n        setFieldValue(field.name, value);\n      },\n    disabled: disabled ?? isSubmitting,\n    loading: isSubmitting,\n    ...fieldSubselection,\n    ...props,\n  };\n}\n\nexport function Autocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined,\n>(props: AutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) {\n  return <MuiAutocomplete {...fieldToAutocomplete(props)} />;\n}\n\nAutocomplete.displayName = 'FormikMaterialUIAutocomplete';\n"],"names":[],"mappings":";;;AAsBO,SAAS,oBAKd;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM,EAAE,cAAc,cAAc;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAKkE;AAC5D,MAAA,QAAQ,IAAI,aAAa,cAAc;AACzC,QAAI,MAAM,UAAU;AAClB;AAAA,QACE,MAAM,QAAQ,MAAM,KAAK;AAAA,QACzB,aAAa,MAAM,IAAI;AAAA,MAAA;AAAA,IAE3B;AAAA,EACF;AAEM,QAAA;AAAA,IACJ,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,GAAG;AAAA,EACD,IAAA;AAEG,SAAA;AAAA,IACL;AAAA,IACA,QACE,UACA,SAAU,OAAO;AACT,YAAA,OAAO,SAAS,MAAM,IAAI;AAAA,IAClC;AAAA,IACF,UACE,YACA,SAAU,QAAQ,OAAO;AACT,oBAAA,MAAM,MAAM,KAAK;AAAA,IACjC;AAAA,IACF,UAAU,YAAY;AAAA,IACtB,SAAS;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA,EAAA;AAEP;AAEO,SAAS,aAKd,OAAmE;AACnE,SAAQ,oBAAA,iBAAA,EAAiB,GAAG,oBAAoB,KAAK,EAAG,CAAA;AAC1D;AAEA,aAAa,cAAc;"}