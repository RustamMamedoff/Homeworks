{"version":3,"file":"Checkbox.js","sources":["../src/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiCheckbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from '@mui/material/Checkbox';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    Omit<\n      MuiCheckboxProps,\n      | 'name'\n      | 'value'\n      | 'error'\n      | 'form'\n      | 'checked'\n      | 'defaultChecked'\n      // Excluded for conflict with Field type\n      | 'type'\n    > {\n  type?: string;\n}\n\nexport function fieldToCheckbox({\n  disabled,\n  field: { onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting },\n  type,\n  onBlur,\n  ...props\n}: CheckboxProps): MuiCheckboxProps {\n  const indeterminate = !Array.isArray(field.value) && field.value == null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n  }\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    indeterminate,\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function Checkbox(props: CheckboxProps) {\n  return <MuiCheckbox {...fieldToCheckbox(props)} />;\n}\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n"],"names":[],"mappings":";;;AAuBO,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA,OAAO,EAAE,QAAQ,aAAa,GAAG,MAAM;AAAA,EACvC,MAAM,EAAE,aAAa;AAAA,EACrB;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAoC;AAC5B,QAAA,gBAAgB,CAAC,MAAM,QAAQ,MAAM,KAAK,KAAK,MAAM,SAAS;AAEhE,MAAA,QAAQ,IAAI,aAAa,cAAc;AACzC;AAAA,MACE,SAAS;AAAA,MACT,gDAAgD,MAAM,IAAI;AAAA,IAAA;AAAA,EAE9D;AAEO,SAAA;AAAA,IACL,UAAU,YAAY;AAAA,IACtB;AAAA,IACA,QACE,UACA,SAAU,GAAG;AACC,kBAAA,KAAK,MAAM,IAAI;AAAA,IAC7B;AAAA,IACF,GAAG;AAAA,IACH,GAAG;AAAA,EAAA;AAEP;AAEO,SAAS,SAAS,OAAsB;AAC7C,SAAQ,oBAAA,aAAA,EAAa,GAAG,gBAAgB,KAAK,EAAG,CAAA;AAClD;AAEA,SAAS,cAAc;"}